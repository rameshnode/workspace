package ramesh.samples.recursive;

public class StringPermutations {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		RecPermute("", "abcd");
	}

	static void RecPermute(String soFar, String rest) {
		if (rest.isEmpty()) {
			System.out.println(soFar);
		} else {
			for (int i = 0; i < rest.length(); i++) {
				String remaining = rest.substring(0, i) + rest.substring(i + 1);
				System.out.println("remaining "+remaining+"-"+i);
				RecPermute(soFar + rest.charAt(i), remaining);
			}
		}
	}

	static void RecPermuteCharcters(String prefix, String rest) {

		if (rest.isEmpty()) {
			System.out.println(rest);
		} else {
			for (int i = 0; i < rest.length(); i++) {

			}
		}
	}

	static void RecSubsets(String soFar, String rest) {
		if (rest.isEmpty())
			System.out.println(soFar);
		else {
			RecSubsets(soFar + rest.charAt(0), rest.substring(1)); // include first char
			RecSubsets(soFar, rest.substring(1)); // exclude first char
		}
	}
}
